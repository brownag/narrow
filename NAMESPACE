# Generated by roxygen2: do not edit by hand

S3method("$",arrowvctrs_array)
S3method("$",arrowvctrs_schema)
S3method("[",arrowvctrs_bitmask)
S3method("[",arrowvctrs_int64)
S3method("[<-",arrowvctrs_bitmask)
S3method("[<-",arrowvctrs_int64)
S3method("[[",arrowvctrs_array)
S3method("[[",arrowvctrs_schema)
S3method(as.double,arrowvctrs_int64)
S3method(as.integer,arrowvctrs_int64)
S3method(as.list,arrowvctrs_array)
S3method(as.list,arrowvctrs_schema)
S3method(as.logical,arrowvctrs_bitmask)
S3method(as_arrow_array,arrowvctrs_array)
S3method(as_arrow_bitmask,arrowvctrs_bitmask)
S3method(as_arrow_bitmask,default)
S3method(as_arrow_bitmask,logical)
S3method(as_arrow_buffer,default)
S3method(as_arrow_int64,arrowvctrs_int64)
S3method(as_arrow_int64,default)
S3method(as_arrow_int64,double)
S3method(as_arrow_int64,integer)
S3method(as_arrow_schema,arrowvctrs_schema)
S3method(as_arrow_schema,character)
S3method(as_arrow_vctr,"NULL")
S3method(as_arrow_vctr,arrowvctrs_vctr)
S3method(as_arrow_vctr,character)
S3method(as_arrow_vctr,data.frame)
S3method(as_arrow_vctr,double)
S3method(as_arrow_vctr,factor)
S3method(as_arrow_vctr,integer)
S3method(as_arrow_vctr,logical)
S3method(as_arrow_vctr,raw)
S3method(format,arrowvctrs_array)
S3method(format,arrowvctrs_bitmask)
S3method(format,arrowvctrs_int64)
S3method(format,arrowvctrs_schema)
S3method(format,arrowvctrs_vctr)
S3method(from_arrow_vctr,character)
S3method(from_arrow_vctr,data.frame)
S3method(from_arrow_vctr,double)
S3method(from_arrow_vctr,factor)
S3method(from_arrow_vctr,integer)
S3method(from_arrow_vctr,logical)
S3method(length,arrowvctrs_array)
S3method(length,arrowvctrs_schema)
S3method(names,arrowvctrs_array)
S3method(names,arrowvctrs_schema)
S3method(print,arrowvctrs_array)
S3method(print,arrowvctrs_bitmask)
S3method(print,arrowvctrs_int64)
S3method(print,arrowvctrs_schema)
S3method(print,arrowvctrs_vctr)
S3method(str,arrowvctrs_schema)
export(arrow_array)
export(arrow_schema)
export(arrow_schema_flags)
export(arrow_vctr)
export(as_arrow_array)
export(as_arrow_bitmask)
export(as_arrow_buffer)
export(as_arrow_int64)
export(as_arrow_schema)
export(as_arrow_vctr)
export(from_arrow_vctr)
export(new_arrow_bitmask)
export(parse_format)
importFrom(utils,str)
useDynLib(arrowvctrs, .registration = TRUE)
