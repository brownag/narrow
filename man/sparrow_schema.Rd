% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/schema.R
\name{sparrow_schema}
\alias{sparrow_schema}
\alias{sparrow_schema_flags}
\alias{sparrow_schema_deep_copy}
\alias{as_sparrow_schema}
\alias{as_sparrow_schema.sparrow_schema}
\alias{as_sparrow_schema.character}
\alias{sparrow_schema_info}
\title{Create Arrow Schema objects}
\usage{
sparrow_schema(
  format,
  name = NULL,
  metadata = NULL,
  flags = sparrow_schema_flags(),
  children = NULL,
  dictionary = NULL
)

sparrow_schema_flags(
  dictionary_ordered = FALSE,
  nullable = FALSE,
  map_keys_sorted = FALSE
)

sparrow_schema_deep_copy(schema)

as_sparrow_schema(x, ...)

\method{as_sparrow_schema}{sparrow_schema}(x, ...)

\method{as_sparrow_schema}{character}(x, ...)

sparrow_schema_info(x, ..., recursive = FALSE)
}
\arguments{
\item{format}{A
\href{https://arrow.apache.org/docs/format/CDataInterface.html#data-type-description-format-strings}{format string}.}

\item{name}{An optional name}

\item{metadata}{A named character vector of \code{\link[=list]{list()}} of \code{\link[=raw]{raw()}}
containing key/value metadata.}

\item{flags}{Flags to set on input (see \code{\link[=sparrow_schema_flags]{sparrow_schema_flags()}})}

\item{children}{A \code{\link[=list]{list()}} of objects created using \code{\link[=sparrow_schema]{sparrow_schema()}}.}

\item{dictionary}{An \code{\link[=sparrow_schema]{sparrow_schema()}} if this is a dictionary type.}

\item{dictionary_ordered}{\code{TRUE} if the \code{dictionary} array is ordered}

\item{nullable}{\code{TRUE} if the type is semantically nullable}

\item{map_keys_sorted}{\code{TRUE} if the keys for a map have been sorted}

\item{schema}{A schema created with \code{\link[=sparrow_schema]{sparrow_schema()}}}

\item{x}{An object to convert to an \code{\link[=sparrow_schema]{sparrow_schema()}}}

\item{...}{Passed to S3 methods}

\item{recursive}{Use \code{TRUE} to serialize the schema recursively}
}
\value{
An external pointer with class 'sparrow_schema'
}
\description{
Create Arrow Schema objects
}
